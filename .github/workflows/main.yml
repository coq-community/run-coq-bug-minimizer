# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Stamp URL
      run: |
        echo '#!/usr/bin/env bash' > github-url.sh
        echo "export GITHUB_WORKFLOW_URL='${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}'" >> github-url.sh
    - run: df -h
    - name: Run minimizer
      uses: coq-community/docker-coq-action@v1.5.0
      with:
        #custom_image: 'registry.gitlab.com/coq/coq:CACHEKEY'
        coq_version: '8.19'
        #ocaml_version: 'default'
        custom_script: ./timeout-run.sh
      timeout-minutes: 330 # Each job in a workflow can run for up to 6 hours of execution time, we want to make sure there's time to upload the files

    - run: cat bug.v
      if: always()

    - name: Upload output file
      id: upload-bug-v
      uses: actions/upload-artifact@v4
      with:
        name: bug.v
        path: bug.v
      if: always()

    - name: Upload output log
      id: upload-bug-log
      uses: actions/upload-artifact@v4
      with:
        name: bug.log
        path: bug.log
      if: always()

    - name: Upload verbose output log
      id: upload-bug-verbose-log
      uses: actions/upload-artifact@v4
      with:
        name: bug.verbose.log
        path: bug.verbose.log
      if: always()

    - name: Upload build log
      id: upload-build-log
      uses: actions/upload-artifact@v4
      with:
        name: build.log
        path: build.log
      if: always()

    - name: Upload temp file
      id: upload-tmp-v
      uses: actions/upload-artifact@v4
      with:
        name: tmp.v
        path: tmp.v
      if: always()

    - name: Upload temp log file
      id: upload-tmp-log
      uses: actions/upload-artifact@v4
      with:
        name: tmp.log
        path: tmp.log
      if: always()

    - name: Upload metadata file
      id: upload-metadata
      uses: actions/upload-artifact@v4
      with:
        name: metadata
        path: metadata
      if: always()

    - name: Stamp file links
      run: |
        set -x
        ./stamp-artifact-url.sh bug.v "${{ steps.upload-bug-v.outputs.artifact-id }}" "${{ steps.upload-bug-v.outcome }}"
        ./stamp-artifact-url.sh bug.log "${{ steps.upload-bug-log.outputs.artifact-id }}" "${{ steps.upload-bug-log.outcome }}"
        ./stamp-artifact-url.sh bug.verbose.log "${{ steps.upload-bug-verbose-log.outputs.artifact-id }}" "${{ steps.upload-bug-verbose-log.outcome }}"
        ./stamp-artifact-url.sh build.log "${{ steps.upload-build-log.outputs.artifact-id }}" "${{ steps.upload-build-log.outcome }}"
        ./stamp-artifact-url.sh tmp.v "${{ steps.upload-tmp-v.outputs.artifact-id }}" "${{ steps.upload-tmp-v.outcome }}"
        ./stamp-artifact-url.sh tmp.log "${{ steps.upload-tmp-log.outputs.artifact-id }}" "${{ steps.upload-tmp-log.outcome }}"
        ./stamp-artifact-url.sh metadata "${{ steps.upload-metadata.outputs.artifact-id }}" "${{ steps.upload-metadata.outcome }}"
      if: always()

    - name: Reply via coqbot
      run: |
        cat ./custom-reply-coqbot.sh
        ./custom-reply-coqbot.sh
      if: always()

    - name: Make a single build artifact
      run: |
        rm -rf /tmp/artifact.tar.gz
        echo '::group::tar -czvf /tmp/artifact.tar.gz .'
        sudo chown -R $(id -u):$(id -g) . # most important for ./tmp/
        sudo tar -czvf /tmp/artifact.tar.gz .
        echo '::endgroup::'
        sudo chown $(id -u):$(id -g) /tmp/artifact.tar.gz
        du -sh /tmp/artifact.tar.gz
      if: always()

    - name: Upload a Build Artifact
      id: upload-artifact-tar-gz
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: /tmp/artifact.tar.gz
      if: always()
