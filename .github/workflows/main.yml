# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Stamp URL
      run: |
        echo '#!/usr/bin/env bash' > github-url.sh
        echo "export GITHUB_WORKFLOW_URL='${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}'" >> github-url.sh
    - name: Run minimizer
      uses: coq-community/docker-coq-action@v1.4.1
      with:
        custom_image: 'registry.gitlab.inria.fr/coq/coq:old_ubuntu_lts-V2023-11-30-7323af070e'
        #coq_version: 'latest'
        #ocaml_version: 'default'
        custom_script: ./timeout-run.sh
      timeout-minutes: 330 # Each job in a workflow can run for up to 6 hours of execution time, we want to make sure there's time to upload the files

    - run: cat bug.v
      if: always()

    - name: Upload output file
      id: upload-bug-v
      uses: actions/upload-artifact@v4
      with:
        name: bug.v
        path: bug.v
      if: always()

    - name: Upload output log
      id: upload-bug-log
      uses: actions/upload-artifact@v4
      with:
        name: bug.log
        path: bug.log
      if: always()

    - name: Upload verbose output log
      id: upload-bug-verbose-log
      uses: actions/upload-artifact@v4
      with:
        name: bug.verbose.log
        path: bug.verbose.log
      if: always()

    - name: Upload build log
      id: upload-build-log
      uses: actions/upload-artifact@v4
      with:
        name: build.log
        path: build.log
      if: always()

    - name: Upload temp file
      id: upload-tmp-v
      uses: actions/upload-artifact@v4
      with:
        name: tmp.v
        path: tmp.v
      if: always()

    - name: Upload metadata file
      id: upload-metadata
      uses: actions/upload-artifact@v4
      with:
        name: metadata
        path: metadata
      if: always()

    - name: Stamp file links
      run: |
        set -x
        printf '%s\n' "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/actions/artifacts/${{ steps.upload-bug-v.outputs.artifact-id }}/zip" | tee bug.v.api.url
        printf '%s\n' "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/actions/artifacts/${{ steps.upload-bug-log.outputs.artifact-id }}/zip" | tee bug.log.api.url
        printf '%s\n' "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/actions/artifacts/${{ steps.upload-bug-verbose-log.outputs.artifact-id }}/zip" | tee bug.verbose.log.api.url
        printf '%s\n' "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/actions/artifacts/${{ steps.upload-build-log.outputs.artifact-id }}/zip" | tee build.log.api.url
        printf '%s\n' "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/actions/artifacts/${{ steps.upload-tmp-v.outputs.artifact-id }}/zip" | tee tmp.v.api.url
        printf '%s\n' "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/actions/artifacts/${{ steps.upload-metadata.outputs.artifact-id }}/zip" | tee metadata.api.url

        printf '%s\n' "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/artifacts/${{ steps.upload-bug-v.outputs.artifact-id }}" | tee bug.v.url
        printf '%s\n' "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/artifacts/${{ steps.upload-bug-log.outputs.artifact-id }}" | tee bug.log.url
        printf '%s\n' "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/artifacts/${{ steps.upload-bug-verbose-log.outputs.artifact-id }}" | tee bug.verbose.log.url
        printf '%s\n' "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/artifacts/${{ steps.upload-build-log.outputs.artifact-id }}" | tee build.log.url
        printf '%s\n' "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/artifacts/${{ steps.upload-tmp-v.outputs.artifact-id }}" | tee tmp.v.url
        printf '%s\n' "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/artifacts/${{ steps.upload-metadata.outputs.artifact-id }}" | tee metadata.url
      if: always()

    - name: Reply via coqbot
      run: ./custom-reply-coqbot.sh
      if: always()

    - name: Make a single build artifact
      run: |
        rm -rf /tmp/artifact.tar.gz
        echo '::group::tar -czvf /tmp/artifact.tar.gz .'
        sudo chown -R $(id -u):$(id -g) . # most important for ./tmp/
        sudo tar -czvf /tmp/artifact.tar.gz .
        echo '::endgroup::'
        sudo chown $(id -u):$(id -g) /tmp/artifact.tar.gz
        du -sh /tmp/artifact.tar.gz
      if: always()

    - name: Upload a Build Artifact
      id: upload-artifact-tar-gz
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: /tmp/artifact.tar.gz
      if: always()
